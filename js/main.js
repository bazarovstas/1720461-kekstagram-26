/* функция проверяет максимальную длину заданной строки, возвращает true или false */
/*
function hasAllowedStringLength(string, maxLength) {
  if (typeof string === 'string') {
    if (string.length <= maxLength) {
      return true;
    }
    return false;
  }
  throw new Error ('Введены некорректные данные');
}

hasAllowedStringLength('Стас, ты молодец!', 17);
*/


/* создаем данные для генерации */
const COMMENT_MESSAGE = [
  'Всё отлично!',
  'В целом всё неплохо. Но не всё.',
  'В целом всё плохо. Но не всё.',
  'Когда вы делаете фотографию, хорошо бы убирать палец из кадра. В конце концов это просто непрофессионально.',
  'Моя бабушка случайно чихнула с фотоаппаратом в руках и у неё получилась фотография лучше.',
  'Я поскользнулся на банановой кожуре и уронил фотоаппарат на кота и у меня получилась фотография лучше.',
  'Лица у людей на фотке перекошены, как будто их избивают. Как можно было поймать такой неудачный момент?!',
  'Эти улыбающиеся люди на фото выглядят довольно стремно...',
  'Это фото подойдет для семейного альбома, но зачем нужно было выкладывать ее на всеобщее обозрение?!',
  'Вы точно хотите стать фотографом?'
];


const COMMENT_NAME = [
  'Неопознанный Кекс',
  'Лосняшийся Енот',
  'Одаренный чувак',
  'Диванный эксперт',
  'Вдумчивый комментатор',
  'Иностранный агент',
  'Просветленный мудрец',
  'Терпеливый агитатор',
  'Токсичный воин',
  'Наглец, на дуде игрец',
  'Чел, который всех бесит',
  'Накидывает на вентилятор'
];


const DESCRIPTION = [
  'глаза мои б этого не видели',
  'будь я на 20 лет моложе, то наверное начал бы завидовать',
  'сложно описывать то, чего не видишь',
  'это описание могло не появиться на свет, но ему повезло',
  'спрячь это и не показывай другим',
  'это не повод творить такое!',
  'а это рандомное описание №7 для рандомной фотки',
  'увидел бы это раньше, то поступил бы по-другому',
  'еще одно случайное описание фотографии',
  'мама раньше запрещала мне смотреть это',
  'пройдут года, и вы будете жалеть об этом'
];


/* создаем константу, счетчик и пустой массив */
const ITERATION_COUNT = 25;
const generatedPicturesArray = [];
let counterForID = 1;


/* функция выбирает случайное число из заданного диапазона */
function getRandomNumber(minNumber, maxNumber) {
  if (minNumber >= 0 && maxNumber >= 0) {
    return Math.round((maxNumber - minNumber) * Math.random() + minNumber);
  }
  throw new Error ('Введены отрицательные числа');
}


/* функция выбирает случайный элемент из заданного массива */
function getRandomArrayElement (array) {
  return array[getRandomNumber(0, array.length - 1)];
}


/* функция создает один комментарий */
function createComment () {
  return {
    id: counterForID++,
    avatar: `img/avatar-${getRandomNumber(1, 6)}.svg`,
    message: getRandomArrayElement(COMMENT_MESSAGE),
    name: getRandomArrayElement(COMMENT_NAME)
  };
}


/* функция создает одну картинку и добавляет случайное количество комментариев (от 1 до 5) */
function createOnePictureItem (id) {
  return ({
    id,
    url: `photos/${id}.jpg`,
    description: getRandomArrayElement(DESCRIPTION),
    likes: getRandomNumber(15, 200),
    comments: Array.from({length: getRandomNumber(1, 5)}, createComment)
  });
}


/* функция создает массив картинок с комментариями */
function generatePicturesArray (count) {
  for (let i = 1; i <= count; i++) {
    generatedPicturesArray.push(createOnePictureItem(i));
  }
  return generatedPicturesArray;
}


generatePicturesArray(ITERATION_COUNT);


/* Структура каждого объекта должна быть следующей:
id, число — идентификатор описания. Это число от 1 до 25. Идентификаторы не должны повторяться.
url, строка — адрес картинки вида photos/{{i}}.jpg, где {{i}} — это число от 1 до 25. Адреса картинок не должны повторяться.
description, строка — описание фотографии. Описание придумайте самостоятельно.
likes, число — количество лайков, поставленных фотографии. Случайное число от 15 до 200.
comments, массив объектов — список комментариев, оставленных другими пользователями к этой фотографии.
Количество комментариев к каждой фотографии вы определяете на своё усмотрение.
Все комментарии генерируются случайным образом. Пример описания объекта с комментарием:
{
  id: 135,
  avatar: 'img/avatar-6.svg',
  message: 'В целом всё неплохо. Но не всё.',
  name: 'Артём',
}
У каждого комментария есть идентификатор — id — случайное число. Идентификаторы не должны повторяться.
Поле avatar — это строка, значение которой формируется по правилу img/avatar-{{случайное число от 1 до 6}}.svg. Аватарки подготовлены в директории img.
Для формирования текста комментария — message — вам необходимо взять одно или два случайных предложения из представленных ниже:
Имена авторов также должны быть случайными. Набор имён для комментаторов составьте сами. Подставляйте случайное имя в поле name. */
